# Alternative Dockerfile using specific versions
FROM node:18-alpine AS frontend-builder

WORKDIR /app/frontend

COPY frontend/package*.json ./
RUN npm install

COPY frontend/ .
RUN npm run build

FROM node:18-alpine AS backend-builder

WORKDIR /app/backend

COPY backend/package*.json ./
RUN npm install

COPY backend/ .
RUN npm run build

FROM nginx:stable-alpine

# Install Node.js in the nginx container
RUN apk add --no-cache nodejs npm

# Copy built frontend files
COPY --from=frontend-builder /app/frontend/build /usr/share/nginx/html

# Copy backend files
WORKDIR /app/backend
COPY --from=backend-builder /app/backend/dist ./dist
COPY --from=backend-builder /app/backend/package*.json ./
COPY --from=backend-builder /app/backend/database ./database
RUN npm install --production

# Copy nginx configuration with API proxying
COPY nginx-combined.conf /etc/nginx/conf.d/default.conf

# Copy startup script
COPY start.sh /start.sh
RUN chmod +x /start.sh

EXPOSE 80

CMD ["/start.sh"]